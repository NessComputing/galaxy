#!/bin/bash -l
#
# Installs the bundled Galaxy gem and imports the Galaxy SMF services
#

#
# Reinvoke under bash to configure PATH
#
if [ -z "$BASH" ]
then
    exec /bin/bash -l $0 $*
fi

PACKAGE="galaxy"
PACKAGE_VERSION="#{PACKAGE_VERSION}"
GEM_VERSION="#{GEM_VERSION}"

# The filesystem containing the gem directory may be mounted read-only on
# zones with shared filesystems. Do not install the gem in these cases,
# but warn the user so they know that the gem was not installed.
gemdir=`ruby -rubygems -e 'puts Gem::dir'`

# We can't just use '[ -w $gemdir ]' here because -w only checks the mode
# bits on the file and cannot determine whether the underlying filesystem
# is mounted read-only.
WRITABLE_TEST="$gemdir/galaxy-write-test"
touch $WRITABLE_TEST 2>/dev/null

if [ $? -eq 0 ]
then
    rm $WRITABLE_TEST
    gem install /var/sadm/pkg/galaxy/install/$PACKAGE.gem
    if [ $? -ne 0 ]
    then
        echo "Error: Unable to install the $PACKAGE-$GEM_VERSION gem"
        exit 1
    fi
else
    echo "WARNING: Skipping Gem installation for unwritable directory $gemdir (FINE ON ZONES)"
fi

# Configure galaxy.conf
file=/etc/galaxy.conf
CONSOLE="gonsole.company.com"
GEPO="gepo.company.com"
ENVIRONMENT="prod"
if [ ! -e "$file" ]; then
        cat <<EOF > $file
#
# Galaxy client properties
#
galaxy.client.console: $CONSOLE

#
# Galaxy agent properties
#
galaxy.agent.console: $CONSOLE
galaxy.agent.config-root: http://$GEPO/config/trunk/$ENVIRONMENT
galaxy.agent.binaries-root: http://$GEPO/binaries
galaxy.agent.deploy-dir: /home/xncore/deploy
galaxy.agent.data-dir: /home/xncore/data
galaxy.agent.log: SYSLOG
galaxy.agent.log-level: INFO
galaxy.agent.announce-interval: 60
galaxy.agent.user: xncore
galaxy.agent.pid-file: /home/xncore/galaxy-agent.pid
EOF
fi

svccfg import /var/svc/manifest/application/management/galaxy-agent.xml
svccfg import /var/svc/manifest/application/management/galaxy-console.xml

svccfg -s galaxy-agent setprop start/user = astring: xncore
svccfg -s galaxy-agent setprop start/group = astring: xncore

# Start Galaxy agent
svcadm enable "galaxy-agent"
